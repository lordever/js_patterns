/**
 * У страны должен быть единственный президент, иначе начнется беспорядок.
 * Паттерн Синглтон ограничивает инстанцирование и позволяет убедиться в том,
 * что класс представлен в программе единственным экземпляром.
 */

/**
 * В JavaScript Синглтоны могут быть реализованы с помощью шаблона Модуль.
 * Приватные переменные и функции при этом прячутся в замыкании.
 * 
 * Примечание: в данном примере, для упрощения, проверка присутствия инстанса скрыта 
 * под объявлением переменной в рамках const, что не позволит создавать, 
 * или присваивать новые значение к текущей сущности. Для подробного ознакомления
 * с шаблоном Singleton можно взглянуть на пример из википедии:
 * https://ru.wikipedia.org/wiki/%D0%9E%D0%B4%D0%B8%D0%BD%D0%BE%D1%87%D0%BA%D0%B0_(%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F)#JavaScript
 */
const president = (function () {
    const presidentsPrivateInformation = 'Super private'

    const name = 'Turd Sandwich'

    const getName = () => name

    return {
        getName
    }
}());

//Делаем сущность иммутабельной 
Object.freeze(president)

/**
 * В этом примере частная информация скрыта от внешнего кода.
 * Публичный метод позволяет узнать имя президента (но не изменить его):
 */
president.getName() // 'Turd Sandwich'
president.name // undefined
president.presidentsPrivateInformation // undefined



